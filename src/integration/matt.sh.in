#!/bin/sh
######################################################
#            PROJECT  : MATT                         #
#            VERSION  : 0.1.0-dev                    #
#            DATE     : 01/2014                      #
#            AUTHOR   : Valat SÃ©bastien              #
#            LICENSE  : CeCILL-C                     #
######################################################

######################################################
ENABLE_MPI=false
MPI_WRAPPER_DIR="$HOME/.matt"
MATT_OPTIONS=""

######################################################
mattPrepMPI()
{
	#create dir
	if [ ! -d "$MPI_WRAPPER_DIR/" ]; then
		mkdir -p "$MPI_WRAPPER_DIR" || exit 1
	fi
	
	#select mpicxx
	mpicxx="$1"

	#missing parameter
	if [ -z "$mpicxx" ]; then
		if [ ! -z "$MPICXX" ]; then
			echo "No mpicxx provided by command, trying your MPICXX="$MPICXX" from environnement !"
			mpicxx="$MPICXX"
		else
			echo "No mpicxx provided by command, trying default 'mpicxx' from environnement !"
			mpicxx=mpicxx
		fi
	fi

	#compile file
	echo "$mpicxx" '-shared' '-fPIC' "@CMAKE_INSTALL_PREFIX@/share/matt/MattMPIRank.cpp" -o "$MPI_WRAPPER_DIR/libmattmpi.so"
	"$mpicxx" '-shared' '-fPIC' "@CMAKE_INSTALL_PREFIX@/share/matt/MattMPIRank.cpp" -o "$MPI_WRAPPER_DIR/libmattmpi.so"
	
	#finish
	exit $?
}

######################################################
mattShowHelp()
{
	echo "Usage : matt [--config file] [--help] [--] YOUR_COMMAND"
	echo ""
	echo "Options:"
	echo "   -c file/--config file       Provide configuration file in INI format."
	echo "           --mpi               Use MPI wrapper to get ranks in output file names."
	echo "           --prep-mpi [mpicxx] Build the mpi wrapper into $HOME/.matt/libmattmpi.so"
	echo "   -s mode/--stack=mode        Select the stack tracking mode (backtrace|enter-exit)."
	echo "   -t/--trace                  Enable the tracing mode."
	echo "   -d/--dumpconfig             Enable the dump of config file at exit."
	echo "   -o SEC:NAME=VAL;...         Override configuration values."
	echo "   -h/--help                   Show this help message."
	echo ""
}

######################################################
#Check args
while true; do
	case "$1" in
		--help|-h)
			mattShowHelp
			exit 0
		;;
		--config|-c)
			export MATT_CONFIG="$2"
			shift 2
		;;
		--stack|-s)
			export MATT_STACK="$2"
			shift 2
		;;
		--trace|-t)
			export MATT_OPTIONS="${MATT_OPTIONS};trace:enabled=true"
			shift 1
		;;
		--option|-o)
			export MATT_OPTIONS="${MATT_OPTIONS};$2"
			shift 2
		;;
		--dumpconfig|-d)
			export MATT_OPTIONS="${MATT_OPTIONS};output:config=true"
			shift 1
			;;
		--mpi)
			ENABLE_MPI=true
			if [ ! -e "$MPI_WRAPPER_DIR/libmattmpi.so" ]; then
				echo "Missing MPI wrapper to extract ranks, please prepare it with 'matt --prep-mpi=MPICXX' !"
				exit 1
			fi
			shift 1
		;;
		--prep-mpi)
			case "$2" in
				-*)
					mattPrepMPI
					shift 1
				;;
				*)
					mattPrepMPI "$2"
					shift 2
				;;
			esac
		;;
		--)
			shift 1
			break
		;;
		*)
			break
		;;
	esac
done

######################################################
#debug env
# if [ ! -z "$MATT_CONFIG" ]; then echo "MATT_CONFIG=$MATT_CONFIG"; fi

######################################################
#run
if [ "$ENABLE_MPI" = "true" ]; then
	LD_PRELOAD="$MPI_WRAPPER_DIR/libmattmpi.so @CMAKE_INSTALL_PREFIX@/lib/libmatt.so" "$@"
else
	LD_PRELOAD="@CMAKE_INSTALL_PREFIX@/lib/libmatt.so" "$@"
fi
